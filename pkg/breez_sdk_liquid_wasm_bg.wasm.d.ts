/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export const __wbg_bindingliquidsdk_free: (a: number, b: number) => void;
export const connect: (a: any) => any;
export const connectWithSigner: (a: any, b: any) => any;
export const defaultConfig: (a: any, b: number, c: number) => [number, number, number];
export const parseInvoice: (a: number, b: number) => [number, number, number];
export const setLogger: (a: any) => [number, number];
export const bindingliquidsdk_getInfo: (a: number) => any;
export const bindingliquidsdk_signMessage: (a: number, b: any) => [number, number, number];
export const bindingliquidsdk_checkMessage: (a: number, b: any) => [number, number, number];
export const bindingliquidsdk_parse: (a: number, b: number, c: number) => any;
export const bindingliquidsdk_addEventListener: (a: number, b: any) => any;
export const bindingliquidsdk_removeEventListener: (a: number, b: number, c: number) => any;
export const bindingliquidsdk_prepareSendPayment: (a: number, b: any) => any;
export const bindingliquidsdk_sendPayment: (a: number, b: any) => any;
export const bindingliquidsdk_prepareReceivePayment: (a: number, b: any) => any;
export const bindingliquidsdk_receivePayment: (a: number, b: any) => any;
export const bindingliquidsdk_fetchLightningLimits: (a: number) => any;
export const bindingliquidsdk_fetchOnchainLimits: (a: number) => any;
export const bindingliquidsdk_preparePayOnchain: (a: number, b: any) => any;
export const bindingliquidsdk_payOnchain: (a: number, b: any) => any;
export const bindingliquidsdk_prepareBuyBitcoin: (a: number, b: any) => any;
export const bindingliquidsdk_buyBitcoin: (a: number, b: any) => any;
export const bindingliquidsdk_listPayments: (a: number, b: any) => any;
export const bindingliquidsdk_getPayment: (a: number, b: any) => any;
export const bindingliquidsdk_fetchPaymentProposedFees: (a: number, b: any) => any;
export const bindingliquidsdk_acceptPaymentProposedFees: (a: number, b: any) => any;
export const bindingliquidsdk_prepareLnurlPay: (a: number, b: any) => any;
export const bindingliquidsdk_lnurlPay: (a: number, b: any) => any;
export const bindingliquidsdk_lnurlWithdraw: (a: number, b: any) => any;
export const bindingliquidsdk_lnurlAuth: (a: number, b: any) => any;
export const bindingliquidsdk_registerWebhook: (a: number, b: number, c: number) => any;
export const bindingliquidsdk_unregisterWebhook: (a: number) => any;
export const bindingliquidsdk_fetchFiatRates: (a: number) => any;
export const bindingliquidsdk_listFiatCurrencies: (a: number) => any;
export const bindingliquidsdk_listRefundables: (a: number) => any;
export const bindingliquidsdk_prepareRefund: (a: number, b: any) => any;
export const bindingliquidsdk_refund: (a: number, b: any) => any;
export const bindingliquidsdk_rescanOnchainSwaps: (a: number) => any;
export const bindingliquidsdk_sync: (a: number) => any;
export const bindingliquidsdk_recommendedFees: (a: number) => any;
export const bindingliquidsdk_backup: (a: number, b: any) => [number, number];
export const bindingliquidsdk_restore: (a: number, b: any) => [number, number];
export const bindingliquidsdk_disconnect: (a: number) => any;
export const rustsecp256k1_v0_6_1_context_create: (a: number) => number;
export const rustsecp256k1_v0_6_1_context_destroy: (a: number) => void;
export const rustsecp256k1_v0_6_1_default_illegal_callback_fn: (a: number, b: number) => void;
export const rustsecp256k1_v0_6_1_default_error_callback_fn: (a: number, b: number) => void;
export const rustsecp256k1_v0_10_0_context_create: (a: number) => number;
export const rustsecp256k1_v0_10_0_context_destroy: (a: number) => void;
export const rustsecp256k1_v0_10_0_default_illegal_callback_fn: (a: number, b: number) => void;
export const rustsecp256k1_v0_10_0_default_error_callback_fn: (a: number, b: number) => void;
export const rustsecp256k1zkp_v0_10_0_default_illegal_callback_fn: (a: number, b: number) => void;
export const rustsecp256k1zkp_v0_10_0_default_error_callback_fn: (a: number, b: number) => void;
export const rust_sqlite_wasm_shim_localtime_js: (a: bigint, b: number) => void;
export const rust_sqlite_wasm_shim_tzset_js: (a: number, b: number, c: number, d: number) => void;
export const rust_sqlite_wasm_shim_emscripten_get_now: () => number;
export const rust_sqlite_wasm_shim_malloc: (a: number) => number;
export const rust_sqlite_wasm_shim_free: (a: number) => void;
export const rust_sqlite_wasm_shim_realloc: (a: number, b: number) => number;
export const sqlite3_os_init: () => number;
export const task_worker_entry_point: (a: number) => [number, number];
export const __wbg_intounderlyingbytesource_free: (a: number, b: number) => void;
export const intounderlyingbytesource_type: (a: number) => number;
export const intounderlyingbytesource_autoAllocateChunkSize: (a: number) => number;
export const intounderlyingbytesource_start: (a: number, b: any) => void;
export const intounderlyingbytesource_pull: (a: number, b: any) => any;
export const intounderlyingbytesource_cancel: (a: number) => void;
export const __wbg_intounderlyingsource_free: (a: number, b: number) => void;
export const intounderlyingsource_pull: (a: number, b: any) => any;
export const intounderlyingsource_cancel: (a: number) => void;
export const __wbg_intounderlyingsink_free: (a: number, b: number) => void;
export const intounderlyingsink_write: (a: number, b: any) => any;
export const intounderlyingsink_close: (a: number) => any;
export const intounderlyingsink_abort: (a: number, b: any) => any;
export const __wbindgen_exn_store: (a: number) => void;
export const __externref_table_alloc: () => number;
export const __wbindgen_export_2: WebAssembly.Table;
export const __wbindgen_free: (a: number, b: number, c: number) => void;
export const __wbindgen_malloc: (a: number, b: number) => number;
export const __wbindgen_realloc: (a: number, b: number, c: number, d: number) => number;
export const __wbindgen_export_6: WebAssembly.Table;
export const __externref_table_dealloc: (a: number) => void;
export const closure38_externref_shim_multivalue_shim: (a: number, b: number, c: any) => [number, number];
export const _dyn_core__ops__function__FnMut_____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__hc5a41db1dabe9b5a: (a: number, b: number) => void;
export const closure484_externref_shim: (a: number, b: number, c: any) => void;
export const _dyn_core__ops__function__Fn_____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h65b85e8787f1cd5e: (a: number, b: number) => void;
export const closure833_externref_shim: (a: number, b: number, c: any, d: any) => void;
export const __wbindgen_start: () => void;
